// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMap.proto

package Ex02;

/**
 * Protobuf type {@code MapFloor}
 */
public final class MapFloor extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:MapFloor)
        MapFloorOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MapFloor.newBuilder() to construct.
  private MapFloor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MapFloor() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new MapFloor();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GameMap.internal_static_MapFloor_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetTileMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GameMap.internal_static_MapFloor_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            MapFloor.class, MapFloor.Builder.class);
  }

  private int bitField0_;
  public static final int FLOORID_FIELD_NUMBER = 1;
  private int floorId_ = 0;
  /**
   * <code>optional int32 floorId = 1;</code>
   * @return Whether the floorId field is set.
   */
  @Override
  public boolean hasFloorId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional int32 floorId = 1;</code>
   * @return The floorId.
   */
  @Override
  public int getFloorId() {
    return floorId_;
  }

  public static final int TILEMAP_FIELD_NUMBER = 2;
  private static final class TileMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, Tile> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, Tile>newDefaultInstance(
                GameMap.internal_static_MapFloor_TileMapEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                Tile.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      String, Tile> tileMap_;
  private com.google.protobuf.MapField<String, Tile>
  internalGetTileMap() {
    if (tileMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TileMapDefaultEntryHolder.defaultEntry);
    }
    return tileMap_;
  }
  public int getTileMapCount() {
    return internalGetTileMap().getMap().size();
  }
  /**
   * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
   */
  @Override
  public boolean containsTileMap(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTileMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTileMapMap()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, Tile> getTileMap() {
    return getTileMapMap();
  }
  /**
   * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
   */
  @Override
  public java.util.Map<String, Tile> getTileMapMap() {
    return internalGetTileMap().getMap();
  }
  /**
   * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
   */
  @Override
  public /* nullable */
  Tile getTileMapOrDefault(
      String key,
      /* nullable */
Tile defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, Tile> map =
        internalGetTileMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
   */
  @Override
  public Tile getTileMapOrThrow(
      String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<String, Tile> map =
        internalGetTileMap().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, floorId_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTileMap(),
        TileMapDefaultEntryHolder.defaultEntry,
        2);
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, floorId_);
    }
    for (java.util.Map.Entry<String, Tile> entry
         : internalGetTileMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, Tile>
      tileMap__ = TileMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tileMap__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof MapFloor)) {
      return super.equals(obj);
    }
    MapFloor other = (MapFloor) obj;

    if (hasFloorId() != other.hasFloorId()) return false;
    if (hasFloorId()) {
      if (getFloorId()
          != other.getFloorId()) return false;
    }
    if (!internalGetTileMap().equals(
        other.internalGetTileMap())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasFloorId()) {
      hash = (37 * hash) + FLOORID_FIELD_NUMBER;
      hash = (53 * hash) + getFloorId();
    }
    if (!internalGetTileMap().getMap().isEmpty()) {
      hash = (37 * hash) + TILEMAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTileMap().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static MapFloor parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MapFloor parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MapFloor parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MapFloor parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MapFloor parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MapFloor parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MapFloor parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static MapFloor parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static MapFloor parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static MapFloor parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static MapFloor parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static MapFloor parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(MapFloor prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code MapFloor}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:MapFloor)
          MapFloorOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GameMap.internal_static_MapFloor_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetTileMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableTileMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GameMap.internal_static_MapFloor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MapFloor.class, MapFloor.Builder.class);
    }

    // Construct using GeneratedEx02Proto.MapFloor.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      floorId_ = 0;
      internalGetMutableTileMap().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GameMap.internal_static_MapFloor_descriptor;
    }

    @Override
    public MapFloor getDefaultInstanceForType() {
      return MapFloor.getDefaultInstance();
    }

    @Override
    public MapFloor build() {
      MapFloor result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public MapFloor buildPartial() {
      MapFloor result = new MapFloor(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(MapFloor result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.floorId_ = floorId_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.tileMap_ = internalGetTileMap();
        result.tileMap_.makeImmutable();
      }
      result.bitField0_ |= to_bitField0_;
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof MapFloor) {
        return mergeFrom((MapFloor)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(MapFloor other) {
      if (other == MapFloor.getDefaultInstance()) return this;
      if (other.hasFloorId()) {
        setFloorId(other.getFloorId());
      }
      internalGetMutableTileMap().mergeFrom(
          other.internalGetTileMap());
      bitField0_ |= 0x00000002;
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              floorId_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              com.google.protobuf.MapEntry<String, Tile>
              tileMap__ = input.readMessage(
                  TileMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableTileMap().getMutableMap().put(
                  tileMap__.getKey(), tileMap__.getValue());
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int floorId_ ;
    /**
     * <code>optional int32 floorId = 1;</code>
     * @return Whether the floorId field is set.
     */
    @Override
    public boolean hasFloorId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 floorId = 1;</code>
     * @return The floorId.
     */
    @Override
    public int getFloorId() {
      return floorId_;
    }
    /**
     * <code>optional int32 floorId = 1;</code>
     * @param value The floorId to set.
     * @return This builder for chaining.
     */
    public Builder setFloorId(int value) {

      floorId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 floorId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFloorId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      floorId_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, Tile> tileMap_;
    private com.google.protobuf.MapField<String, Tile>
        internalGetTileMap() {
      if (tileMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TileMapDefaultEntryHolder.defaultEntry);
      }
      return tileMap_;
    }
    private com.google.protobuf.MapField<String, Tile>
        internalGetMutableTileMap() {
      if (tileMap_ == null) {
        tileMap_ = com.google.protobuf.MapField.newMapField(
            TileMapDefaultEntryHolder.defaultEntry);
      }
      if (!tileMap_.isMutable()) {
        tileMap_ = tileMap_.copy();
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return tileMap_;
    }
    public int getTileMapCount() {
      return internalGetTileMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    @Override
    public boolean containsTileMap(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTileMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTileMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, Tile> getTileMap() {
      return getTileMapMap();
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    @Override
    public java.util.Map<String, Tile> getTileMapMap() {
      return internalGetTileMap().getMap();
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    @Override
    public /* nullable */
    Tile getTileMapOrDefault(
        String key,
        /* nullable */
Tile defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, Tile> map =
          internalGetTileMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    @Override
    public Tile getTileMapOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<String, Tile> map =
          internalGetTileMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearTileMap() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableTileMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    public Builder removeTileMap(
        String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTileMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, Tile>
        getMutableTileMap() {
      bitField0_ |= 0x00000002;
      return internalGetMutableTileMap().getMutableMap();
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    public Builder putTileMap(
        String key,
        Tile value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableTileMap().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>map&lt;string, .Tile&gt; tileMap = 2;</code>
     */
    public Builder putAllTileMap(
        java.util.Map<String, Tile> values) {
      internalGetMutableTileMap().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:MapFloor)
  }

  // @@protoc_insertion_point(class_scope:MapFloor)
  private static final MapFloor DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new MapFloor();
  }

  public static MapFloor getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MapFloor>
      PARSER = new com.google.protobuf.AbstractParser<MapFloor>() {
    @Override
    public MapFloor parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<MapFloor> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<MapFloor> getParserForType() {
    return PARSER;
  }

  @Override
  public MapFloor getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

