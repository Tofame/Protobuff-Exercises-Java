// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMap.proto

package Ex02;

/**
 * Protobuf type {@code Tile}
 */
public final class Tile extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Tile)
        TileOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Tile.newBuilder() to construct.
  private Tile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Tile() {
    items_ = emptyIntList();
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Tile();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return GameMap.internal_static_Tile_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return GameMap.internal_static_Tile_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Tile.class, Tile.Builder.class);
  }

  private int bitField0_;
  public static final int GROUNDID_FIELD_NUMBER = 1;
  private int groundId_ = 0;
  /**
   * <code>optional int32 groundId = 1;</code>
   * @return Whether the groundId field is set.
   */
  @Override
  public boolean hasGroundId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional int32 groundId = 1;</code>
   * @return The groundId.
   */
  @Override
  public int getGroundId() {
    return groundId_;
  }

  public static final int ISWALKABLE_FIELD_NUMBER = 2;
  private boolean isWalkable_ = false;
  /**
   * <code>optional bool isWalkable = 2;</code>
   * @return Whether the isWalkable field is set.
   */
  @Override
  public boolean hasIsWalkable() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional bool isWalkable = 2;</code>
   * @return The isWalkable.
   */
  @Override
  public boolean getIsWalkable() {
    return isWalkable_;
  }

  public static final int ITEMS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private com.google.protobuf.Internal.IntList items_;
  /**
   * <code>repeated int32 items = 3;</code>
   * @return A list containing the items.
   */
  @Override
  public java.util.List<Integer>
      getItemsList() {
    return items_;
  }
  /**
   * <code>repeated int32 items = 3;</code>
   * @return The count of items.
   */
  public int getItemsCount() {
    return items_.size();
  }
  /**
   * <code>repeated int32 items = 3;</code>
   * @param index The index of the element to return.
   * @return The items at the given index.
   */
  public int getItems(int index) {
    return items_.getInt(index);
  }
  private int itemsMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, groundId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(2, isWalkable_);
    }
    if (getItemsList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(itemsMemoizedSerializedSize);
    }
    for (int i = 0; i < items_.size(); i++) {
      output.writeInt32NoTag(items_.getInt(i));
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, groundId_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, isWalkable_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < items_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(items_.getInt(i));
      }
      size += dataSize;
      if (!getItemsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      itemsMemoizedSerializedSize = dataSize;
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Tile)) {
      return super.equals(obj);
    }
    Tile other = (Tile) obj;

    if (hasGroundId() != other.hasGroundId()) return false;
    if (hasGroundId()) {
      if (getGroundId()
          != other.getGroundId()) return false;
    }
    if (hasIsWalkable() != other.hasIsWalkable()) return false;
    if (hasIsWalkable()) {
      if (getIsWalkable()
          != other.getIsWalkable()) return false;
    }
    if (!getItemsList()
        .equals(other.getItemsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasGroundId()) {
      hash = (37 * hash) + GROUNDID_FIELD_NUMBER;
      hash = (53 * hash) + getGroundId();
    }
    if (hasIsWalkable()) {
      hash = (37 * hash) + ISWALKABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsWalkable());
    }
    if (getItemsCount() > 0) {
      hash = (37 * hash) + ITEMS_FIELD_NUMBER;
      hash = (53 * hash) + getItemsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Tile parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Tile parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Tile parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Tile parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Tile parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Tile parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Tile parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Tile parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static Tile parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static Tile parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Tile parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Tile parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Tile prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Tile}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Tile)
          TileOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GameMap.internal_static_Tile_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GameMap.internal_static_Tile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Tile.class, Tile.Builder.class);
    }

    // Construct using GeneratedProto.Tile.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      groundId_ = 0;
      isWalkable_ = false;
      items_ = emptyIntList();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return GameMap.internal_static_Tile_descriptor;
    }

    @Override
    public Tile getDefaultInstanceForType() {
      return Tile.getDefaultInstance();
    }

    @Override
    public Tile build() {
      Tile result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Tile buildPartial() {
      Tile result = new Tile(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(Tile result) {
      if (((bitField0_ & 0x00000004) != 0)) {
        items_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.items_ = items_;
    }

    private void buildPartial0(Tile result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.groundId_ = groundId_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.isWalkable_ = isWalkable_;
        to_bitField0_ |= 0x00000002;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Tile) {
        return mergeFrom((Tile)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Tile other) {
      if (other == Tile.getDefaultInstance()) return this;
      if (other.hasGroundId()) {
        setGroundId(other.getGroundId());
      }
      if (other.hasIsWalkable()) {
        setIsWalkable(other.getIsWalkable());
      }
      if (!other.items_.isEmpty()) {
        if (items_.isEmpty()) {
          items_ = other.items_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureItemsIsMutable();
          items_.addAll(other.items_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              groundId_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              isWalkable_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              int v = input.readInt32();
              ensureItemsIsMutable();
              items_.addInt(v);
              break;
            } // case 24
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              ensureItemsIsMutable();
              while (input.getBytesUntilLimit() > 0) {
                items_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int groundId_ ;
    /**
     * <code>optional int32 groundId = 1;</code>
     * @return Whether the groundId field is set.
     */
    @Override
    public boolean hasGroundId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 groundId = 1;</code>
     * @return The groundId.
     */
    @Override
    public int getGroundId() {
      return groundId_;
    }
    /**
     * <code>optional int32 groundId = 1;</code>
     * @param value The groundId to set.
     * @return This builder for chaining.
     */
    public Builder setGroundId(int value) {

      groundId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 groundId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroundId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      groundId_ = 0;
      onChanged();
      return this;
    }

    private boolean isWalkable_ ;
    /**
     * <code>optional bool isWalkable = 2;</code>
     * @return Whether the isWalkable field is set.
     */
    @Override
    public boolean hasIsWalkable() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool isWalkable = 2;</code>
     * @return The isWalkable.
     */
    @Override
    public boolean getIsWalkable() {
      return isWalkable_;
    }
    /**
     * <code>optional bool isWalkable = 2;</code>
     * @param value The isWalkable to set.
     * @return This builder for chaining.
     */
    public Builder setIsWalkable(boolean value) {

      isWalkable_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool isWalkable = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsWalkable() {
      bitField0_ = (bitField0_ & ~0x00000002);
      isWalkable_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList items_ = emptyIntList();
    private void ensureItemsIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        items_ = mutableCopy(items_);
        bitField0_ |= 0x00000004;
      }
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @return A list containing the items.
     */
    public java.util.List<Integer>
        getItemsList() {
      return ((bitField0_ & 0x00000004) != 0) ?
               java.util.Collections.unmodifiableList(items_) : items_;
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @return The count of items.
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @param index The index of the element to return.
     * @return The items at the given index.
     */
    public int getItems(int index) {
      return items_.getInt(index);
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @param index The index to set the value at.
     * @param value The items to set.
     * @return This builder for chaining.
     */
    public Builder setItems(
        int index, int value) {

      ensureItemsIsMutable();
      items_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @param value The items to add.
     * @return This builder for chaining.
     */
    public Builder addItems(int value) {

      ensureItemsIsMutable();
      items_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @param values The items to add.
     * @return This builder for chaining.
     */
    public Builder addAllItems(
        Iterable<? extends Integer> values) {
      ensureItemsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, items_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 items = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearItems() {
      items_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Tile)
  }

  // @@protoc_insertion_point(class_scope:Tile)
  private static final Tile DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Tile();
  }

  public static Tile getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Tile>
      PARSER = new com.google.protobuf.AbstractParser<Tile>() {
    @Override
    public Tile parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Tile> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Tile> getParserForType() {
    return PARSER;
  }

  @Override
  public Tile getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

